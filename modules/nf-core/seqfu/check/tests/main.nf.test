nextflow_process {

    name "Test Process SEQFU_CHECK"
    script "../main.nf"
    process "SEQFU_CHECK"

    tag "modules"
    tag "modules_nfcore"
    tag "seqfu"
    tag "seqfu/check"

    test("sarscov2 - fastq - single-end") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fastq - paired-end") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test_paired', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fastq - directory") {
        when {
            process {
                """
                // stage input fastq files in a folder
                tmpdir = file("tmpdir", type: 'dir')
                tmpdir.mkdir()
                fastq_file_1 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                fastq_file_2 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                fastq_file_1.copyTo(tmpdir)
                fastq_file_2.copyTo(tmpdir)

                // define inputs of the process here. Example:
                input[0] = [
                    [ id:'test' ],
                    [
                        file(tmpdir, type:'dir', checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions.get(0)).yaml
                ).match() }
            )
        }
    }
 
     test("sarscov2 - fastq - single_end - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    process.out.versions.collect{ path(it).yaml }.unique()
                ).match() }
            )
        }

    }

}